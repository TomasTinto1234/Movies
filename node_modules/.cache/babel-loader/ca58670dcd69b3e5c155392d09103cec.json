{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Henry-Movies\\\\src\\\\components\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { addMovieFavorite, getMovies } from \"../../actions\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Paginado from \"../paginado/Paginado\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const allMovies = useSelector(state => state.moviesLoaded);\n  const allMoviesFavourites = useSelector(state => state.moviesFavourites);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviePerPage\n  /*setMoviePerPage*/\n  ] = useState(8);\n  const indexOfLastMovie = currentPage * moviePerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviePerPage;\n  const currentMovie = allMovies === null || allMovies === void 0 ? void 0 : allMovies.slice(indexOfFirstMovie, indexOfLastMovie);\n  const [,\n  /*[order*/\n  setOrder] = useState(\"\");\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paginado, {\n      moviePerPage: moviePerPage,\n      allMovies: allMovies.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"8f++f3koeZCln6/r01V9UJmThno=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/USER/Henry-Movies/src/components/home/Home.jsx"],"names":["React","addMovieFavorite","getMovies","useState","useEffect","useSelector","useDispatch","Link","Paginado","Home","dispatch","allMovies","state","moviesLoaded","allMoviesFavourites","moviesFavourites","currentPage","setCurrentPage","moviePerPage","indexOfLastMovie","indexOfFirstMovie","currentMovie","slice","setOrder","paginado","pageNumber","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,eAA5C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AAEb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACA,QAAMC,mBAAmB,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACG,gBAAlB,CAAvC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACe;AAAa;AAAd,MAAqCf,QAAQ,CAAC,CAAD,CAAnD;AACA,QAAMgB,gBAAgB,GAAGH,WAAW,GAAGE,YAAvC;AACA,QAAME,iBAAiB,GAAGD,gBAAgB,GAAGD,YAA7C;AACA,QAAMG,YAAY,GAAGV,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEW,KAAX,CAAiBF,iBAAjB,EAAoCD,gBAApC,CAArB;AACA,QAAM;AAAG;AAAWI,EAAAA,QAAd,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqB,QAAQ,GAAIC,UAAD,IAAgB;AAC/BR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACD,GAFD;;AAMJ,sBACI;AAAA,2BACI,QAAC,QAAD;AACA,MAAA,YAAY,EAAEP,YADd;AAEA,MAAA,SAAS,EAAEP,SAAS,CAACe,MAFrB;AAGA,MAAA,QAAQ,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBC,CAlCD;;GAAMf,I;UAEeH,W,EACCD,W,EACUA,W;;;KAJ1BI,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { addMovieFavorite, getMovies } from \"../../actions\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginado from \"../paginado/Paginado\"\r\n\r\nconst Home = ()=>{\r\n\r\n    const dispatch = useDispatch();\r\n    const allMovies = useSelector((state) => state.moviesLoaded);\r\n    const allMoviesFavourites = useSelector((state) => state.moviesFavourites);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [moviePerPage /*setMoviePerPage*/] = useState(8); \r\n    const indexOfLastMovie = currentPage * moviePerPage; \r\n    const indexOfFirstMovie = indexOfLastMovie - moviePerPage;\r\n    const currentMovie = allMovies?.slice(indexOfFirstMovie, indexOfLastMovie);\r\n    const [, /*[order*/ setOrder] = useState(\"\");\r\n  \r\n    const paginado = (pageNumber) => {\r\n      setCurrentPage(pageNumber);\r\n    };\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <Paginado\r\n        moviePerPage={moviePerPage}\r\n        allMovies={allMovies.length}\r\n        paginado={paginado}\r\n        />\r\n        {/* <button\r\n                    className=\"Fav\" \r\n                    onClick={() =>this.props.addMovieFavorite({title: movie.Title, id: movie.imdbID, img: movie.Poster})}>\r\n                    FAV\r\n                  </button> */}\r\n    </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}